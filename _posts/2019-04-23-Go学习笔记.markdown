---
layout: post
title:  "Go学习笔记"
date:   2019-04-23 20:00:00 +0800
categories: jekyll update
---
Go 的基本类型有

bool

string

int  int8  int16  int32  int64
uint uint8 uint16 uint32 uint64 uintptr

byte // uint8 的别名

rune // int32 的别名
    // 表示一个 Unicode 码点

float32 float64

complex64 complex128
本例展示了几种类型的变量。 同导入语句一样，变量声明也可以“分组”成一个语法块。

int, uint 和 uintptr 在 32 位系统上通常为 32 位宽，在 64 位系统上则为 64 位宽。 
当你需要一个整数值时应使用 int 类型，除非你有特殊的理由使用固定大小或无符号的整数类型。
# Go基础知识
<li>Go语句末尾不强制要求分号，但如for循环内的间隔需要使用分号；</li>
<li>:=可以代替var，但仅限在函数范围内；</li>

<li>fmt.Printf中的占位符：%T表示取类型；%v表示基础类型取值；%q表示string等类型取值</li>
<li>类型推导：当使用不带类型的:=语法或var = 表达式语法时，变量的类型由右值推导得出；
不过当右边包含未指明类型的数值常量时，新变量的类型就可能是 int, float64 或 complex128 了，这取决于常量的精度：</li>
<li>常量使用const声明：const world="世界";常量可以是字符、字符串、布尔值或数值；常量不能用:=语法声明；</li>
<li>Go中只有for循环，当for循环只有一个终止条件时，就是while循环</li>
{% highlight go %}
package main

import "fmt"

func main() {
	sum := 1
	for sum < 1000 {
		sum += sum
	}
	fmt.Println(sum)
}
{% endhighlight %}
<li></li>
<li></li>
<li></li>
<li></li>
<li></li>